<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="customAccessDenied" class="com.ict.security.CustomAccessDeniedHandler" />
	<bean id="customLoginSuccess" class="com.ict.security.CustomLoginSuccessHandler" />
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="customUserDetailsService" class="com.ict.security.CustomUserDetailsService" />
	<security:http>
	
		<!-- /secu/all 접속시 모든 유저에게 접근 허용 -->
		<security:intercept-url pattern="/secu/all" access="permitAll" />
		
		

		<!-- /secu/member는 Member에게만 접근 허용 -->
		<!-- access에서 ROLE_ 까지는 필수이며 뒤에 MEMBER는 명칭을 바꿔도 된다 -->
		<security:intercept-url pattern="/secu/member" access="hasRole('ROLE_MEMBER')" />
		<!-- /secu/admin 접속시 모든 admin에게만 접근 허용 -->
		<security:intercept-url pattern="/secu/admin" access="hasRole('ROLE_ADMIN')" />
		
		<!-- 이게 로그인창 --> <!-- 커스텀 로그인 로직으로 적용하기위한 구문 -->
		<security:form-login login-page="/customLogin"
			authentication-success-handler-ref="customLoginSuccess"/>
		
		<!-- 에러떳을때의 페이지 -->
		<!--    <security:access-denied-handler error-page="/accessError" />   -->  
		<security:access-denied-handler ref="customAccessDenied" />
		
		<!-- invalidate 구문으로 로그아웃시 세션파기 -->
		<security:logout logout-url="/customLogout" invalidate-session="true"/>
	</security:http>
	
	<!-- 인증 부여하는곳 -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<!--<security:user-service> 더미데이터 넣는방법
					<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />
					<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER,ROLE_ADMIN" />
				</security:user-service>  -->	
				<!-- db와 연동 -->
				
			 	<!--  <security:jdbc-user-service data-source-ref="dataSource"/> customUserDetailService추가로인해 삭제    -->	
				
				<security:password-encoder ref="bcryptPasswordEncoder" />
				
			</security:authentication-provider>
	</security:authentication-manager>

</beans>
